import pandas as pd
import numpy as np

''' 
CYGNSS Level 1 Science Data Record Version3.1
Publisher: PO.DAAC
Release Date: 2021-Oct-28 
Basic inputs:
m = starting Day number 
n = ending Day number 

--SUB FUNCTIONS--
String definition for the day number in year(365 or 366)'''
def fun1(i):
    if i<= 9:
        b = '00'+str(i)
        return b
    elif i>=10 and i<=99:
        b = '0'+str(i)
        return b
    elif i>=100 and i<=365:
        b = str(i)
        return b   
    
'''String definition for the satellite number'''
def fun2(i):
    if i>=0 and i<=8:
        b = '0'+str(i)
        return b
    
'''String definition for the month number'''
def fun3(i):
    if i<=9:
        b = '0'+str(i)
        return b
    elif i>=10 and i <=12:
        b = str(i)
        return b    
'''String definition for the day number in month(28 or 30 or 31)'''
def fun4(i):
    if i<=9:
        b = '0'+str(i)
        return b
    elif i>=10 and i <=31:
        b = str(i)
        return b
    
''' Formatting Date '''    
def fun5(i):
    if (i>=1) and (i<=31):
        b1 = fun3(1)                           ## Month Number(Jan)
        b2 = fun4(i)                           ## Day number in month
        c = b1+b2
                
    elif (i>=32) and (i<=59):
        b1 = fun3(2)                           ## Month Number(Feb)
        b2 = fun4(i-31)                           ## Day number in month
        c = b1+b2
                
    elif (i>=60) and (i<=90):
        b1 = fun3(3)                           ## Month Number(Mar)
        b2 = fun4(i-59)                        ## Day number in month
        c = b1+b2
                
    elif (i>=91) and (i<=120):
        b1 = fun3(4)                           ## Month Number(Apr)
        b2 = fun4(i-90)                        ## Day number in month
        c = b1+b2
        
    elif (i>=121) and (i<=151):
        b1 = fun3(5)                           ## Month Number(May)
        b2 = fun4(i-120)                       ## Day number in month
        c = b1+b2
        
    elif (i>=152) and (i<=181):
        b1 = fun3(6)                           ## Month Number(Jun)
        b2 = fun4(i-151)                       ## Day number in month
        c = b1+b2
        
    elif (i>=182) and (i<=212):
        b1 = fun3(7)                           ## Month Number(Jul)
        b2 = fun4(i-181)                       ## Day number in month
        c = b1+b2
        
    elif (i>=213) and (i<=243):
        b1 = fun3(8)                           ## Month Number(Aug)
        b2 = fun4(i-212)                       ## Day number in month
        c = b1+b2
        
    elif (i>=244) and (i<=273):
        b1 = fun3(9)                           ## Month Number(Sept)
        b2 = fun4(i-243)                       ## Day number in month
        c = b1+b2
        
    elif (i>=274) and (i<=304):
        b1 = fun3(10)                          ## Month Number(Oct)
        b2 = fun4(i-273)                       ## Day number in month 
        c = b1+b2
        
    elif (i>=305) and (i<=334):
        b1 = fun3(11)                          ## Month Number(Nov)
        b2 = fun4(i-304)                       ## Day number in month
        c = b1+b2
        
    elif (i>=335) and (i<=365):
        b1 = fun3(12)                          ## Month Number(Dec)
        b2 = fun4(i-334)                       ## Day number in month
        c = b1+b2
    return c

''' Formatting Satellite IDs'''
def fun6(i,j):
    if (i==2) and (j==4):
        a4 = '-005334-e2021'       ## +b1+b2
    elif (i==7) and (j==2):
        a4 = '-144153-e2021'       ## +b1+b2
    elif (i==14) and (j==2):
        a4 = '-011822-e2021'       ## +b1+b2
    elif (i==20) and (j==7):
        a4 = '-000252-e2021'       ## +b1+b2
    elif (i==27) and (j==5):
        a4 = '-010325-e2021'       ## +b1+b2
    elif (i==70) and (j==3):
        a4 = '-000234-e2021'       ## +b1+b2
    elif (i==81) and (j==6):
        a4 = '-060240-e2021'       ## +b1+b2
    elif (i==82) and (j==6):
        a4 = '-162545-e2021'       ## +b1+b2
    elif (i==119) and (j==3):
        a4 = '-090158-e2021'       ## +b1+b2
    elif (i==169) and (j==5):
        a4 = '-142632-e2021'       ## +b1+b2
    elif (i==181) and (j==6):
        a4 = '-171407-e2021'       ## +b1+b2
    elif (i==191) and (j==1):
        a4 = '-002501-e2021'       ## +b1+b2
    elif (i==193) and (j==1):
        a4 = '-000126-e2021'       ## +b1+b2
    elif (i==199) and (j==5):
        a4 = '-000436-e2021'       ## +b1+b2
    elif (i==321) and (j==2):
        a4 = '-193802-e2021'       ## +b1+b2
    elif (i==323) and (j==5):
        a4 = '-060556-e2021'       ## +b1+b2
    elif (i==358) and (j==5):
        a4 = '-001457-e2021'       ## +b1+b2
    elif (i==363) and (j==8):
        a4 = '-001234-e2021'       ## +b1+b2
    else:
        a4 = '-000000-e2021'
    return a4

def fun7(i,j):
    if (i==5) and (j==2):
        a5 = '-052651.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==12) and (j==2):
        a5 = '-032417.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==19) and (j==7):
        a5 = '-235704.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==20) and (j==5):
        a5 = '-020643.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==55) and (j==7):
        a5 = '-235743.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==69) and (j==3):
        a5 = '-235809.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==80) and (j==6):
        a5 = '-101722.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==81) and (j==6):
        a5 = '-061233.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==82) and (j==7):
        a5 = '-235727.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==117) and (j==3):
        a5 = '-014108.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==166) and (j==6):
        a5 = '-235539.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==167) and (j==5):
        a5 = '-222129.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==179) and (j==6):
        a5 = '-190056.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==187) and (j==1):
        a5 = '-172750.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==192) and (j==1):
        a5 = '-235908.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==198) and (j==5):
        a5 = '-225601.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==206) and (j==1):
        a5 = '-235749.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==320) and (j==2):
        a5 = '-003203.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==321) and (j==5):
        a5 = '-223009.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==347) and (j==8):
        a5 = '-235932.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==357) and (j==5):
        a5 = '-235400.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==362) and (j==8):
        a5 = '-235016.l1.power-brcs.a30.d31.nc.nc?'
    elif (i==365) and (j==8):
        a5 = '-235600.l1.power-brcs.a30.d31.nc.nc?'
    else:
        a5 = '-235959.l1.power-brcs.a30.d31.nc.nc?'
    return a5

'''--Collecting Samples for 2021 for every satellites every day--'''

       # Cyg01   Cyg02   Cyg03   Cyg04   Cyg05   Cyg06   Cyg07   Cyg08
TS1 = [[172684, 172701, 172370, 172492, 172300, 172421, 172627, 172342],  # Day_001 
       [170000, 170000, 170000, 160000, 170000, 170000, 170000, 170000],  # Day_002
       [170000, 170000, 170000, 160000, 170000, 170000, 170000, 170000],  # Day_003
       [170000, 170000, 170000, 170000, 170000, 170000, 160000, 170000],  # Day_004
       [160000,  37000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_005
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_006
       [170000,  66972, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_007
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_008
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_009 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_010 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_011 
       [170000,  24515, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_012 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_013 
       [170000, 160856, 169157, 170000, 170000, 170000, 170000, 170000],  # Day_014 
       [170000, 170000, 170000, 170000,  55725, 170000, 170000, 170000],  # Day_015
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_016 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_017
       [169856, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_018           January(01/2021) 
       [170000, 170000, 170000, 170000, 170000, 170000, 171964, 170000],  # Day_019
       [170000, 170000, 170000, 170000,  15207, 170000, 170000, 170000],  # Day_020 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_021 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_022 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_023 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_024 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_025 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_026
       [170000, 170000, 170000, 170000, 165071, 170000, 170000, 170000],  # Day_027
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 169908],  # Day_028
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_029 
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_030
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_031
       
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_032
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_033
       [170000, 170000, 170000, 151135, 170000, 170000, 170000, 170000],  # Day_034
       [170000, 170000, 170000, 162827, 170000, 170000, 170000, 170000],  # Day_035
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_036
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_037
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_038
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_039
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_040
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_041
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_042
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_043
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_044            February(02/2021)
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_045
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_046
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_047
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_048
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_049
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_050
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_051
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_052
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_053
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_054
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_055
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_056
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_057
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_058
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_059
       
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_060
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_061
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_062
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_063
       [170000, 170000, 170000, 151135, 170000, 170000, 170000, 170000],  # Day_064
       [170000, 170000, 170000, 162827, 169141, 170000, 170000, 170000],  # Day_065
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_066
       [170000, 170000, 170000, 170000, 168509, 170000, 170000, 170000],  # Day_067
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_068
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_069
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_070
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_071
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_072
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_073
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_074
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_075          March(03/2021)
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_076
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_077
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_078
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_079
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_080
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_081
       [170000, 170000, 170000, 170000, 170000,  54486, 171907, 170000],  # Day_082
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_083
       [170000, 170000, 164321, 170000, 170000, 170000, 170000, 170000],  # Day_084
       [170000, 170000, 170000, 164095, 164341, 170000, 170000, 170000],  # Day_085
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_086
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_087
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_088
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_089
       [170000, 170000, 170000, 170000, 170000, 170000, 170000, 170000],  # Day_090
       
       [172000, 172000, 172000, 172000, 172000, 164112, 172000, 172000],  # Day_091
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 170000],  # Day_092
       [172000, 172000, 172000, 171346, 172000, 172000, 172000, 172000],  # Day_093
       [172000, 172000, 172000, 172000, 172000, 172000, 171900, 172000],  # Day_094       
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_095
       [171706, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_096 
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_097       
       [172000, 172000, 172000, 172000, 171000, 172000, 172000, 172000],  # Day_098
       [172000, 172000, 172000, 172000, 172000, 164178, 172000, 164551],  # Day_099  
       [170000, 172000, 172331, 172500, 171647, 172200, 172023, 172359],  # Day_100
       [172000, 172000, 172000, 172000, 172000, 172000, 164339, 171686],  # Day_101
       [172000, 171900, 172000, 172000, 171416, 171156, 171143, 171231],  # Day_102
       [171803, 172000, 172000, 172000, 172000, 172000, 171968, 172000],  # Day_103 
       [171720, 171800, 163722, 172000, 172000, 172000, 171900, 171500],  # Day_104
       [171900, 172000, 172000, 172000, 172000, 171625, 172000, 171925],  # Day_105  
       [172000, 171500, 172000, 172000, 172000, 172000, 172000, 171800],  # Day_106         April(04/2021)       
       [163931, 163567, 172000, 171698, 172000, 171296, 171700, 172000],  # Day_107 
       [172000, 172000, 172000, 172000, 172000, 171000, 172000, 171000],  # Day_108
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_109 
       [170000, 172632, 172331, 172000, 171000, 171000, 172023, 172359],  # Day_110    
       [172000, 172000, 172000, 171378, 172000, 172000, 172000, 172000],  # Day_111
       [172000, 172000, 164183, 172000, 172000, 164570, 164339, 172000],  # Day_112
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_113
       [172000, 172000, 172000, 171568, 172000, 172000, 171359, 172000],  # Day_114 
       [172000, 172000, 172000, 172000, 172000, 172000, 171591, 172000],  # Day_115
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_116
       [171800, 172000,  12137, 172000, 172000, 172000, 171700, 172000],  # Day_117
       [80500,  172000, 172000, 171772, 172000, 170464, 172000, 172000],  # Day_118
       [172000, 172000, 107409, 172000, 172000, 172000, 172000, 172000],  # Day_119
       [170000, 172632, 172331, 172500, 171647, 172500, 172023, 172359],  # Day_120
       
       [170000, 172632, 172331, 172500, 171647, 172500, 172023, 172000],  # Day_121  
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_122
       [172000, 172000, 164112, 172000, 164009, 172000, 164573, 172000],  # Day_123
       [172000, 172000, 172000, 172000, 172000, 171000, 171900, 172000],  # Day_124 
       [171822, 172000, 171144, 172000, 172000, 172000, 172000, 172000],  # Day_125
       [171525, 172000, 172000, 172000, 171918, 172000, 172000, 172000],  # Day_126  
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_127       
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_128
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_129       
       [170000, 171099, 172331, 172500, 171647, 172100, 172023, 172359],  # Day_130  
       [170261, 171958, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_131
       [172000, 172000, 172000, 171231, 172000, 172000, 171700, 172000],  # Day_132
       [172000, 169996, 170139, 170185, 172000, 170283, 169849, 172000],  # Day_133
       [172000, 172000, 172000, 172000, 169688, 172000, 171900, 170275],  # Day_134 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_135 
       [107809, 172000, 172000, 172000, 172000, 172575, 172000, 170167],  # Day_136          May(05/2021) 
       [ 28181, 171800, 172000, 170763, 172000, 14111,  171700, 158900],  # Day_137
       [172000, 172000, 170872, 172000, 172000, 172000, 172000, 172000],  # Day_138
       [172000, 170286, 170283, 170244, 172000, 170148, 170284, 172000],  # Day_139 
       [170000, 171742, 172331, 172500, 170286, 172500, 172023, 170286],  # Day_140 
       [170000, 172532, 172103, 171400, 171647, 172500, 172023, 172359],  # Day_141 
       [172000, 172000, 171650, 172000, 172000, 172000, 171700, 172000],  # Day_142
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_143
       [170287, 171300, 172000, 172000, 172000, 172000, 171900, 172000],  # Day_144 
       [171360, 172000, 172000, 172000, 172000, 172000, 171678, 172000],  # Day_145
       [170200, 172000, 171823, 172000, 171775, 172000, 172000, 172000],  # Day_146
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_147       
       [172000, 172000, 170200, 170200, 172000, 170200, 170200, 170900],  # Day_148       
       [172000, 170200, 172000, 172000, 170200, 172000, 172000, 169500],  # Day_149       
       [170000, 172500, 172331, 172500, 171647, 172500, 172023, 172257],  # Day_150 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_151
       
       [172000, 172000, 172000, 172000, 172000, 171821, 171700, 172000],  # Day_152
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 171963],  # Day_153
       [172000, 172000,  44634, 164344, 172000, 164572, 171900, 164279],  # Day_154
       [172000, 172000, 172000, 172000, 172000, 172000, 171661, 172000],  # Day_155
       [172000, 158900, 170100, 170200, 161500, 170100, 170000, 172000],  # Day_156 
       [171800, 134411, 161672, 172000, 169000, 172000, 171700, 170200],  # Day_157
       [172000, 172000, 171722, 171804, 172000, 172000, 172000, 172000],  # Day_158
       [ 79270, 161300, 172000, 171000, 172000, 172000, 172000, 172000],  # Day_159        
       [170000, 171499, 172331, 162800, 171647, 172500, 172023, 172359],  # Day_160 
       [170000, 172526, 172331, 172500, 171647, 172500, 172023, 172359],  # Day_161
       [172000, 171015, 172000, 171393, 171915, 172000, 171700, 172000],  # Day_162
       [164143, 164002, 172000, 164569, 172000, 172000, 172000, 172000],  # Day_163
       [172000, 172000, 161400, 172000, 172000, 171021, 171900, 172000],  # Day_164 
       [172000, 171371, 172000, 172000, 172000, 171981, 172000, 172000],  # Day_165          June(06/2021)
       [172000, 172000, 172000, 172000, 172000, 172226, 172000, 172000],  # Day_166
       [171800, 172000, 172000, 172000, 160913, 172000, 171700, 172000],  # Day_167  
       [172000, 172000, 172000, 172000, 171800, 172000, 171800, 172000],  # Day_168
       [172000, 172000, 172000, 172000,  68814, 172000, 171903, 172000],  # Day_169
       [170000, 172193, 172331, 172500, 171647, 172378, 164024, 172359],  # Day_170 
       [171191, 172000, 171711, 172000, 172000, 172000, 171000, 172000],  # Day_171 
       [172000, 172000, 172000, 172000, 171841, 172000, 171700, 172000],  # Day_172
       [172000, 172000, 171719, 161400, 172000, 172000, 161600, 172000],  # Day_173
       [172000, 172000, 172000, 172000, 171863, 171685, 171900, 172000],  # Day_174 
       [172000, 172000, 172000, 171920, 172000, 163568, 172000, 171563],  # Day_175
       [172000, 171379, 172000, 172000, 172000, 172000, 171800, 172000],  # Day_176 
       [171800, 171379, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_177
       [172000, 172000, 164088, 172000, 172000, 172000, 172000, 172000],  # Day_178
       [171341, 170195, 171553, 172000, 172000, 136913, 171124, 172000],  # Day_179
       [170000, 171841, 172331, 170386, 171154, 172500, 172023, 171541],  # Day_180
       [172749, 172777, 170152, 169960, 171647,  45545, 169926, 172251],  # Day_181 
       
       [172000, 169920, 171922, 172000, 172000, 172000, 171700, 170240],  # Day_182
       [172000, 164067, 172000, 172000, 170248, 172000, 171797, 164317],  # Day_183
       [171000, 172000, 172000, 172000, 172000, 171590, 171900, 172000],  # Day_184  
       [172000, 172000, 172000, 171782, 172000, 172000, 172000, 172000],  # Day_185
       [172000, 172000, 172000, 172000, 172000, 172000, 170279, 172000],  # Day_186
       [125741, 172000, 172000, 172000, 172000, 172000, 169137, 172000],  # Day_187
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_188
       [172000, 163761, 172000, 170932, 171729, 172000, 172000, 172000],  # Day_189 
       [170000, 169883, 170285, 169582, 172746, 172500, 169587, 169856],  # Day_190 
       [169491, 172000, 172000, 171200, 170281, 171400, 164103, 172000],  # Day_191
       [171630, 172000, 172000, 171400, 164338, 172000, 171400, 172000],  # Day_192
       [171582, 172000, 172000, 171812, 170983, 171300, 171599, 172000],  # Day_193
       [169995, 171000, 172000, 172000, 172000, 172000, 171900, 172000],  # Day_194
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 171411],  # Day_195
       [169500, 172000, 172000, 172000, 172000, 164111, 172000, 172000],  # Day_196          July (07/2021) 
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_197
       [163956, 169000, 170000, 170000, 164951, 170000, 170200, 170000],  # Day_198 
       [172000, 172000, 172000, 172000, 172068, 172000, 172000, 172000],  # Day_199
       [170000, 171953, 171953, 170000, 171647, 163889, 172023, 172359],  # Day_200
       [171725, 171766, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_201
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_202
       [171200, 172000, 172000, 172000, 172000, 172000, 164110, 172000],  # Day_203
       [172000, 172000, 172000, 171900, 172000, 171400, 171900, 172000],  # Day_204       
       [164104, 170200, 170200, 168976, 172000, 169700, 168900, 171600],  # Day_205
       [172534, 171400, 172000, 172000, 170200, 171400, 171400, 170200],  # Day_206
       [171800, 172000, 172000, 171400, 171464, 172000, 171400, 172000],  # Day_207 
       [171881, 171300, 172000, 171900, 172000, 172000, 172000, 164572],  # Day_208 
       [170200, 172000, 172000, 172000, 172000, 172000, 172000, 171880],  # Day_209 
       [170000, 172477, 172331, 172500, 171647, 172500, 172023, 172359],  # Day_210
       [172000, 172000, 170000, 172000, 172000, 172000, 164108, 172000],  # Day_211       
       [172000, 172000, 172000, 171900, 172000, 172000, 171700, 172000],  # Day_212 
       
       [161685, 172000, 171455, 171200, 172000, 172000, 171400, 172000],  # Day_213
       [172000, 171300, 171856, 172000, 172000, 171400, 171900, 172000],  # Day_214
       [171833, 171147, 171400, 171457, 171449, 171150, 171492, 171103],  # Day_215
       [172000, 163983, 171534, 172000, 172000, 171400, 172000, 172000],  # Day_216
       [171800, 171400, 172000, 172000, 172000, 172000, 171300, 164339],  # Day_217 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 161693],  # Day_218       
       [171985, 172000, 172000,  32600, 172000, 172000, 172000, 172000],  # Day_219 
       [170000, 172200, 172331,  16590, 171647, 172500, 172023, 172244],  # Day_220
       [170000, 172616, 171427, 172400, 171647, 172500, 172023, 172359],  # Day_221 
       [172000, 172000, 172000, 172000, 172000, 172000, 161200, 172000],  # Day_222       
       [172000, 172000, 160900, 172000, 172000, 172000, 172000, 164291],  # Day_223
       [172000, 172000, 172000, 171885, 172000, 172000, 159900, 172000],  # Day_224
       [171400, 171300, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_225
       [163717, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_226 
       [171800, 172000, 172000, 172000, 171900, 161400, 171700, 172000],  # Day_227
       [172000, 172000, 172000, 172000, 172000, 172000, 161600, 172000],  # Day_228       August (08/2021)     
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 171685],  # Day_229 
       [170000, 172632, 172331, 172500, 171647, 172500, 171335, 172359],  # Day_230  
       [172000, 171319, 172000, 171400, 172000, 172000, 172000, 172000],  # Day_231
       [171400, 171627, 172000, 171300, 172000, 171198, 171700, 171569],  # Day_232
       [159800, 172000, 171575, 171400, 171398, 164109, 171011, 172000],  # Day_233
       [172000, 172000, 172000, 172000, 164083, 171400, 171900, 171773],  # Day_234
       [171100, 172000, 172000, 171400, 172000, 160149, 172000, 170880],  # Day_235
       [171400, 172000, 172000, 172000, 172000, 172000, 172000, 171887],  # Day_236
       [171400, 172000, 172000, 171400, 172000, 172000, 163852, 172000],  # Day_237  
       [172000, 172000, 171400, 172000, 172000, 171300, 172000, 171072],  # Day_238 
       [172000, 171200, 171900, 171400, 163519, 171394, 172000, 172000],  # Day_239
       [170000, 161400, 172331, 172398, 171647, 172500, 172023, 172359],  # Day_240
       [161600, 172500, 170062, 166721, 169990, 172500, 172023, 171164],  # Day_241 
       [172000, 170016, 172000, 172000, 168117, 161400, 170016, 172000],  # Day_242 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_243   
       
       [172000, 171900, 172000, 172000, 172000, 172000, 171900, 172000],  # Day_244
       [172000, 172000, 172000, 172000, 164106, 164108, 172000, 172000],  # Day_245
       [171200, 161400, 172000, 171400, 172000, 172000, 172000, 172000],  # Day_246
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_247        
       [171383, 172000, 172000, 172000, 172000, 172000, 171947, 172000],  # Day_248
       [171400, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_249
       [170000, 171300, 172331, 172500, 171647, 172419, 172023, 172359],  # Day_250
       [171276, 172000, 161600, 172000, 172000, 161400, 172000, 172000],  # Day_251 
       [171790, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_252 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_253
       [171496, 172000, 172000, 171900, 172000, 171857, 171494, 171742],  # Day_254 
       [172000, 171300, 172000, 171400, 161600, 171543, 170575, 172000],  # Day_255
       [172000, 172000, 172000, 172000, 172000, 171176, 172730, 161200],  # Day_256     
       [171800, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_257       
       [172000, 172000, 172000, 172000, 172000, 168400, 172000, 172000],  # Day_258       
       [171200, 171700, 164292, 172000, 172000, 172000, 164110, 172000],  # Day_259
       [170000, 160548, 172331, 171038, 171647, 172500, 171023, 172359],  # Day_260
       [170000, 172632, 172154, 171400, 161697, 159798, 172023, 172359],  # Day_261
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_262      September(09/2021)
       [172000, 172000, 172000, 172000, 171670, 171991, 172000, 172000],  # Day_263
       [172000, 172000, 172000, 172000, 172000, 172000, 171900, 171809],  # Day_264 
       [172000, 172000, 172000, 169900, 172000, 171400, 172000, 172000],  # Day_265      
       [172000, 171183, 172000, 172000, 172000, 172000, 163739, 172000],  # Day_266
       [161100, 171400, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_267       
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 153671],  # Day_268
       [172000, 172000, 172000, 171000, 172000, 172000, 172000, 172000],  # Day_269       
       [170000, 171424, 172331, 163200, 171647, 172500, 172023, 172359],  # Day_270  
       [172000, 172000, 164338, 172000, 172000, 172000, 172000, 172000],  # Day_271
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_272
       [171779, 171684, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_273
       
       [172668, 172000, 161200, 172000, 171715, 172000, 171517, 171860],  # Day_274
       [171400, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_275
       [172000, 172000, 171981, 172000, 172000, 172000, 172000, 172000],  # Day_276
       [159500, 171975, 172000, 151026, 172000, 172000, 171700, 171541],  # Day_277 
       [172000, 172000, 172000, 172000, 172000, 172000,  33391, 172000],  # Day_278       
       [171526, 171885, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_279
       [170000, 172632, 172331, 163471, 171647, 171100, 170623, 172300],  # Day_280 
       [170000, 162764, 172264, 172500, 171647, 171400, 170193, 171818],  # Day_281 
       [172000, 161688, 172000, 161220, 172000, 171499, 171484, 172000],  # Day_282 
       [171498, 171498, 172000, 172000, 172000, 172000, 172000, 170736],  # Day_283
       [172000, 172000, 172000, 171900, 172000, 172000, 171900, 172000],  # Day_284
       [172000, 170879, 172000, 172000, 172000, 172000, 171855, 172000],  # Day_285
       [172000, 172000, 172000, 172000, 172000, 171146, 172000, 171905],  # Day_286
       [171800, 172000, 172000, 171321, 172000, 172000, 171700, 171900],  # Day_287  
       [168456, 172000, 172000, 172000, 171900, 171800, 172000, 172000],  # Day_288 
       [172000, 172000, 172000, 172000, 171115, 172000, 172000, 172000],  # Day_289
       [161204, 172632, 172331, 172500, 171077, 172500, 172023, 172359],  # Day_290
       [172000, 172000, 172000, 172000, 171494, 172000, 171827, 172000],  # Day_291
       [172000, 171300, 172000, 172000, 172000, 172000, 171700, 172000],  # Day_292       October(10/2021)   
       [172000, 164036, 172000, 172000, 172000, 172000, 171242, 172000],  # Day_293
       [172000, 172000, 172000, 172000, 172000, 172000, 171630, 172000],  # Day_294       
       [172000, 171892, 172000, 172000, 171738, 171753, 172000, 172000],  # Day_295
       [172000, 172000, 172000, 171349, 172000, 172000, 172000, 171663],  # Day_296
       [171721, 171403, 171743, 172000, 171850, 172000, 171700, 172000],  # Day_297 
       [172000, 171234, 172000, 171590, 172000, 171970, 172000, 171669],  # Day_298       
       [172000, 172000, 171733, 172000, 172000, 172000, 172000, 172000],  # Day_299       
       [170000, 172632, 172238, 172500, 171647, 172500, 172023, 171787],  # Day_300        
       [172000, 172000, 172000, 171868, 172000, 171260, 159821, 172000],  # Day_301
       [171214, 172000, 172000, 171895, 172000, 171320, 171700, 171353],  # Day_302 
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_303       
       [172000, 172000, 172000, 172000, 172000, 171643, 171900, 172000],  # Day_304 
       
       [172000, 172000, 172000, 172000, 172000, 172000, 171500, 172000],  # Day_305
       [172000, 171931, 172000, 172000, 172000, 171422, 172000, 172000],  # Day_306
       [170286, 165616, 172000, 172000, 172000, 171447, 171700, 172000],  # Day_307 
       [172000, 171395, 172000, 172000, 172000, 171499, 172000, 172000],  # Day_308
       [170798, 171797, 172000, 171492, 117019, 171451, 172000, 170579],  # Day_309 
       [170000, 172269, 170053, 160025, 171647, 170223, 170164, 168071],  # Day_310 
       [172000, 172000, 171889, 172000, 170252, 172000, 172000, 172000],  # Day_311 
       [172000, 172000, 172000, 170774, 150700, 172000, 171700, 172000],  # Day_312  
       [172000, 169832, 170285, 169419, 172000, 170285, 170001, 172000],  # Day_313 
       [172000, 172000, 171402, 172000, 170285, 172000, 171001, 169259],  # Day_314 
       [172000, 171325, 172000, 162992, 172000, 171164, 172000, 172000],  # Day_315
       [172000, 164341, 172000, 171370, 172000, 172000, 172000, 172000],  # Day_316       
       [160150, 172000, 164224, 172000, 172000, 171258, 171700, 172000],  # Day_317
       [172000, 172000, 170217, 171351, 171558, 171429, 171875, 172000],  # Day_318       
       [170263, 172000, 172000, 163739, 172000, 172000, 172000, 172000],  # Day_319
       [170000,   3847, 172331, 172500, 171647, 172016, 172023, 171803],  # Day_320 
       [170000,  31435, 172331, 160575, 161943, 171029, 172023, 172359],  # Day_321        November(11/2021)       
       [170283, 172000, 172000, 161456, 172000, 172000, 171700, 171564],  # Day_322
       [172000, 172000, 171308, 172000, 128886, 172000, 171697, 172000],  # Day_323
       [172000, 170079, 170219, 170119, 172000, 169494, 169982, 172728],  # Day_324  
       [172000, 172000, 172000, 171587, 172615, 171621, 172000, 170285],  # Day_325
       [172000, 172000, 172000, 172000, 172000, 171836, 172000, 172000],  # Day_326
       [171800, 172000, 172000, 172000, 172000, 171836, 171700, 172000],  # Day_327 
       [171439, 172000, 171037, 171533, 172000, 171005, 171966, 172000],  # Day_328
       [172000, 172000, 172000, 172000, 170598, 171604, 172000, 172000],  # Day_329
       [170000, 171702, 172331, 172468, 171647, 171787, 172023, 172231],  # Day_330 
       [172000, 170205, 170190, 170216, 172000, 170221, 170260, 172000],  # Day_331
       [172000, 171713, 172000, 170315, 169433, 171514, 171700, 169355],  # Day_332 
       [172000, 171947, 172000, 171524, 172000, 172000, 172000, 172000],  # Day_333
       [172000, 172000, 170061, 170869, 172000, 171157, 171900, 170615],  # Day_334
       
       [171896, 171683, 172000, 171278, 172000, 172000, 172000, 171568],  # Day_335
       [172000, 172000, 171676, 172000, 172000, 172000, 172000, 170592],  # Day_336
       [171800, 172000, 172000, 171600, 172000, 172000, 171700, 171600],  # Day_337
       [172000, 172000, 171354, 172000, 171663, 172000, 172000, 172000],  # Day_338
       [172000, 172000, 170976, 172000, 171976, 171628, 172000, 172000],  # Day_339
       [170000, 172632, 172331, 171958, 171647, 170899, 172023, 171932],  # Day_340
       [170000, 171795, 171795, 172033, 171647, 169834, 172023, 169720],  # Day_341
       [172000, 172000, 172000, 118477, 171300, 171656, 171700, 172000],  # Day_342
       [164110, 172000, 172000,  35999, 171700, 171656, 164057, 172000],  # Day_343  
       [172000, 172000, 172000, 172000, 172000, 171900, 171900, 172000],  # Day_344       
       [172000, 172000, 172000, 172000, 172000, 172000, 172000, 172000],  # Day_345
       [172000, 172000, 172000, 171800, 171926, 172000, 171600, 172000],  # Day_346 
       [171800, 172000, 171800, 172000, 172000, 172000, 171700, 172565],  # Day_347
       [171800, 172000, 172000, 172000, 172000, 171580, 172000, 172000],  # Day_348
       [170919, 171677, 172000, 163495, 172000, 139828, 172000, 172000],  # Day_349 
       [170000, 141324, 172100, 172500, 171647, 172500, 172023, 171359],  # Day_350 
       [172000, 172000, 172000, 172000, 172000,  62263, 172000, 172000],  # Day_351       
       [172000, 172000, 172000, 172000, 172000, 172000, 171700, 171500],  # Day_352      
       [172000,   3909, 172000, 172000, 171517, 172000, 172000, 172000],  # Day_353 --------> December (12/2021) 
       [172000, 172000, 172000, 172000, 172000, 172000, 171900, 172000],  # Day_354 
       [170162, 172000, 172000, 172000, 172000, 172000, 147714, 172000],  # Day_355
       [172000, 170285, 170241, 170155, 172000, 170266, 169883, 172000],  # Day_356 
       [171800, 172000, 172000, 172000, 163598, 172000, 171700, 170097],  # Day_357
       [172000, 164112, 172000, 172000, 170941, 172000, 143800, 172000],  # Day_358
       [172200, 172000, 171978, 172000, 172000, 172000, 172000, 164317],  # Day_359
       [172099, 172500, 172331, 172073, 164092, 172500, 172023, 172359],  # Day_360 
       [170000, 172632, 172331, 172138, 164108, 172500, 172023, 172359],  # Day_361
       [171947, 162986, 172000, 172000, 171800, 171375, 171700, 167686],  # Day_362 
       [ 76777, 172000, 172000, 172000, 172000, 172000, 165967, 171290],  # Day_363
       [172000, 171258, 171900, 172000, 160528, 172000, 166137, 171974],  # Day_364
       [171324, 170061, 170285, 169741, 172000, 169617, 169450, 171856]]  # Day_365
       
'''--Generating Link--'''
a1 = 'https://podaac-opendap.jpl.nasa.gov/opendap/allData/cygnss/L1/v3.0/2021/'                   ## +a, Day Number in Year
a2 = '/cyg'                                                                                       ## +b, Satellite number
a3 = '.ddmi.s2021'                                                                                ## +b1, Month number +b2, Day Number in month

''' --Enter the variables name as per requirement**(Update as per need)--'''
v3  = 'sp_lat'
v4  = ',sp_lon'
v5  = ',sp_inc_angle'
v6  = ',sp_rx_gain'
v7  = ',gps_tx_power_db_w'
v8  = ',gps_ant_gain_db_i'
v9  = ',ddm_snr'
v10  = ',ddm_noise_floor'
v11  = ',rx_to_sp_range'
v12  = ',tx_to_sp_range'
v13  = ',quality_flags'
v14  = ',power_analog'


'''--Generating URLs for the datasets**(Update as per variables)--'''
url1 = []
for i in range(1,366):
    a = fun1(i)                            ## Day number in year
    B = fun5(i)
    for j in range(1,9):                   ## Satellite number
        a4 = fun6(i,j)
        a5 = fun7(i,j)
        TS = TS1[i-1][j-1]
        S = f'%5B0:1:{TS}%5D%5B0:1:3%5D'   ## Sample range
        s3 = '%5B0:1:16%5D%5B0:1:10%5D'
        b = fun2(j)                        ## Satellite number
        url_1 = a1+a+a2+b+a3+B+a4+B+a5+v3+S+v4+S+v5+S+v6+S+v7+S+v8+S+v9+S+v10+S+v11+S+v12+S+v13+S+v14+S+s3
        url1.append(url_1)
url2 = np.array(url1)
url = url2.reshape(365,8)

'''Handling missing satellite's data'''
url[0][3] = url[0][2]
url[5][1] = url[5][0]
url[12][1] = url[12][0]
url[19][0] = url[19][3]
url[19][1] = url[19][3]
url[19][2] = url[19][3]
url[19][5] = url[19][3]
url[20][4] = url[20][3]
url[21][4] = url[21][3]
url[22][4] = url[22][3]
url[23][4] = url[23][3]
url[24][4] = url[24][3]
url[25][4] = url[25][3]
url[117][1] = url[117][2]
url[167][4] = url[167][3]
url[179][5] = url[179][4]
url[187][0] = url[187][1]
url[188][0] = url[188][1]
url[189][0] = url[189][1]
url[321][4] = url[321][3]

''' Code for the entire world dataset '''
import requests
def Download_CYGNSSdata(m,n):
    for i in range(m-1,n):
        B = fun5(i+1)
        for j in range(7,8):
            urls = url[i][j]
            r = requests.get(urls)
            with open(f"cyg0{j+1}.ddmi.s2021{B}-000000-e2021{B}-235959.l1.power-brcs.a30.d31.nc.nc",'wb') as f:
                f.write(r.content) 

                
                
'''Code for downloading in the ganga catchment only'''
def masking_data_in_Region(ds,lat_lowerLim,lat_upperLim,lon_lowerLim,lon_upperLim):
    Lat1 = (np.array(ds['sp_lat'])).flatten()
    Lat1 = (pd.DataFrame(Lat1)).replace(to_replace=-9999,value=np.nan)
    Lat1.columns = ['sp_lat']
    Lat1['sp_lon'] = (pd.DataFrame((np.array(ds['sp_lon'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['sp_inc_angle'] = (pd.DataFrame((np.array(ds['sp_inc_angle'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['sp_rx_gain'] = (pd.DataFrame((np.array(ds['sp_rx_gain'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['gps_tx_power_db_w'] = (pd.DataFrame((np.array(ds['gps_tx_power_db_w'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['gps_ant_gain_db_i'] = (pd.DataFrame((np.array(ds['gps_ant_gain_db_i'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['ddm_snr'] = (pd.DataFrame((np.array(ds['ddm_snr'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['ddm_noise_floor'] = (pd.DataFrame((np.array(ds['ddm_noise_floor'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['rx_to_sp_range'] = (pd.DataFrame((np.array(ds['rx_to_sp_range'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['tx_to_sp_range'] = (pd.DataFrame((np.array(ds['tx_to_sp_range'])).flatten())).replace(to_replace=-9999,value=np.nan)
    Lat1['quality_flags'] = (pd.DataFrame((np.array(ds['quality_flags'])).flatten())).replace(to_replace=-9999,value=np.nan)

    Pi = np.array(ds['power_analog'])
    l,m,n,o = Pi.shape
    P1 =  (pd.DataFrame((np.array(ds['power_analog'])).flatten())).replace(to_replace=-9999,value=np.nan)
    P1 = P1.to_numpy()
    P1 = P1.reshape(l,4,17,11)
    df1 = []
    for i in range(l):
        for j in range(4):
            a = np.max(P1[i][j][:])
            df1.append(a)      
    df2 = np.array(df1)
    DDM_peak = df2.reshape(l,4)
    Lat1['ddm_peak'] = DDM_peak.flatten()
    mask = ((Lat1['sp_lat']>lat_lowerLim) & (Lat1['sp_lat']<lat_upperLim)) & ((Lat1['sp_lon']>lon_lowerLim) & (Lat1['sp_lon']<lon_upperLim))
    Lat1 = Lat1[mask]
    return Lat1


def Download_CYGNSS_Spatial_Filter(m,n,lat1,lon1,lat2,lon2):
    import urllib.request
    import xarray as xr
    import io
    for i in range(m-1,n):
        for j in range(8):
            urls = url[i][j]
            req = urllib.request.Request(urls)
            with urllib.request.urlopen(req) as resp:
                dataset = xr.open_dataset(io.BytesIO(resp.read()))
                Lat1 = masking_data_in_Region(dataset,lat_lowerLim=lat1,lat_upperLim=lat2,lon_lowerLim=lon1,lon_upperLim=lon2)
                Lat1.to_csv(f'Day_{i+1}_Cyg0{j+1}.csv',index = False)
                
# Downloading day by day
def Download_CYGNSS_Data_2021(m,n,lat1,lon1,lat2,lon2):
    for i in range(m,n-1):
        Download_CYGNSS_Spatial_Filter(i,i+1,lat1,lon1,lat2,lon2)